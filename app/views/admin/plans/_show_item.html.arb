columns :class => "columns #{(index % 2 > 0) ? "even" : "odd"}" do
  column :min_width => "30%" do
    span auto_link(i, i.eatable.name)
  end

  column :max_width => "8%" do
    span i.weight.round(2)
  end

  [:proteins, :fats, :carbs].each do |n|
    column :max_width => "8%" do
      i.calculate_nutrient_weight(n, i.weight).round(2)
    end
  end

  column :max_width => "8%" do
    i.calculate_kcal_weight(i.weight).round(2)
  end

  column do
    link_to(I18n.t('active_admin.edit'), edit_admin_plan_plan_item_path(s, i)) + " | " +
    link_to(I18n.t('active_admin.delete'), admin_plan_plan_item_path(s, i), :method => :delete, :data => {:confirm => I18n.t('active_admin.delete_confirmation')}, :class => "member_link delete_link")
  end

end

i.plan_item_ingredients.each do |pi|
  columns :class => "small_i columns #{(index % 2 > 0) ? "even" : "odd"}" do
    column :min_width => "30%" do
      span pi.ingredient.name
    end

    column :max_width => "8%" do
      span do
        if pi.ingredient.portion_unit == "item"
          "#{(pi.weight / pi.ingredient.portion).round(2)} items"
        else
          "#{pi.weight.round(2)} g"
        end
      end
    end

    [:proteins, :fats, :carbs].each do |n|
      column :max_width => "8%" do
        span pi.ingredient.calculate_nutrient_weight(n, pi.weight).round(2)
      end
    end

    column :max_width => "8%" do
      span pi.ingredient.calculate_kcal_weight(pi.weight)
    end

    column do
      link_to(I18n.t('active_admin.edit'), edit_admin_plan_item_plan_item_ingredient_path(i, pi)) + " | " +
      link_to(I18n.t('active_admin.delete'), admin_plan_item_plan_item_ingredient_path(i, pi), :method => :delete, :data => {:confirm => I18n.t('active_admin.delete_confirmation')}, :class => "member_link delete_link")
    end

  end
end
span "&nbsp".html_safe

